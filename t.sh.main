#!/bin/bash

# t.sh test tool — clone of outdated t.cmd
# version 0.01-r10  Every time you commit modified version of t.sh, increment -r<number>
# copyright (c) Oleg Davydov, Yury Petrov
# This program is free sortware, under GPL, for great justice...

# t.sh is being developed in a Subversion repository:
# https://burunduk3.geins.ru/svn/public/t.sh
# You can get latest t.sh version there. And, when you make changes to t.sh,
# please commit it to this repository. Ask Oleg Davydov (burunduk3@gmail.com,
# vk.com/burunduk3) if you don't have access.

# questions
#   1. If there is directory “tests”, shall we recursive scan into subdirectories?
#   2. If there is directory “src”, should “clean” command remove “tests” directory? yes

# todo
#   1. Parameters for running java and compiling all
#   2. [echo_colored] support for -n [done]
#   3. Advanced coloring
#   4. Standard input/output (option?)
#   5. Replace printf "%02d" $i (ex-seq...) with something even more appropriate.
#      (I suppose grepping smth like [0-9]{2-3} and so on. -- Yury Petrov)
#   6. Add statistics (using time?)
#   7. t.sh check xx --allow-wa [done]
#   8. Kill if TL (ulimit)
#   9. Rewrite clean: do not remove files that don't have to be removed.
#      Store list of files created during build in smth like .t.sh.list
#      using a kind of diff of ls's before and after.

# changelog
#   1. 2009-11-06: src directory support
#   2. 39-312 (2009-11-09): perl support, doall-generated answers support
#   3. 2009-11-17: seq -> printf
#   4. 2009-11-20: -D__T_SH__
#   5. 40-034 (20010-02-04): added compile skipping (like make)
#   6. 2010-06-08: Python & bash support
#   7. 2010-06-21: Some help; -t as an alias for --no-remove-tests;
#      doall is handled in a more common way
#   8. 2010-06-24: Help about clean, minor fixes
#   9. 40-178 (2010-06-28): better argument parsing
#      added --allow-wa
#  10. 2010-07-18: Java path bugfix

#name=`stat "$0" --format '%n'`
#while [[ `stat "$name" --format '%F'` == 'symbolic link' ]]; do
#  name=`stat "$name" --format '%N' | sed -e $'s/^\`[^\']*\' -\> \`\\([^\']*\\)\'/\\1/'`
#done
#echo "nane = $name"
#echo "${0%/*}/"

