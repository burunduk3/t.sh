  Задачей называется директория, в которой содержится хотя бы что-то одно из
следующего:
  — файл .datalog (в нём t.sh-лог изменений задачи)
  — файл problem.properties (в нём, в упрощённом ini-формате всякие параметры
задачи)
  — файл problem.xml (пока что не поддерживается)
  — директория tests (в ней содержатся тесты либо генераторы для тестов)
  — директория source или src (в ней содержатся генераторы для тестов и
прочее)
Приритеты:
  — Если существует problem.xml, используется он, .datalog синхронизируется по
нему
  …

TODO:
  команды reset и rescan
  экспорт (хотя бы .tests -> tests/%0*d), желательно ещё конфиги ejudge для
контеста
  команды set <всякая ерунда> чтобы не использовать problem.properties без
необходимости
  модули (вроде распаковки test.7z какой-нибудь понятной структуры)
  починить t.py -r build (на ~/lksh/2015/03-winter/lksh-2015-winter-as/day03.casino/problems/)
  «лёгкий» режим (без создания .datalog), особенно полезно для clean
какого-нибудь

Какие-то старые куски, надо будет разобраться, нет ли чего полезного
# === PARTS OF t.sh ===

# # GCC flags
# gccVersionString=`gcc --version | head -n 1`
# gccVersion=${gccVersionString##* }
# gccVersionMajor=${gccVersion##*.}
# if [ $gccVersionMajor == "4" ] ; then
#   CFLAGS="-O2 -Wall -Wextra -I $INCLUDE_PATH -D__T_SH__"
# else
#   CFLAGS="-O2 -Wall -I $INCLUDE_PATH -D__T_SH__"
# fi
# CXXFLAGS="${CFLAGS}"
# # End of GCC flags
# BINARY_SUFFIX=""
# if [ "$OPERATION_SYSTEM" != "Linux" ]; then
#   CFLAGS="$CFLAGS -Wl,--stack=134217728"
#   CXXFLAGS="$CXXFLAGS -Wl,--stack=134217728"
#   BINARY_SUFFIX=".exe"
# fi


